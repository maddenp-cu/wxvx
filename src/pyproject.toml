[tool.coverage.report]
exclude_also = [
  "if TYPE_CHECKING:"
]
fail_under = 100
omit = ["*/tests/*"]
show_missing = true
skip_covered = true

[tool.docformatter]
black = true
in-place = true
make-summary-multi-line = true
pre-summary-newline = true
recursive = true
wrap-descriptions = 100
wrap-summaries = 100

[tool.mypy]
check_untyped_defs = true
pretty = true
warn_return_any = true

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "ANN001",  # missing-type-function-argument
  "ANN002",  # missing-type-args
  "ANN003",  # missing-type-kwargs
  "ANN201",  # missing-return-type-class-method
  "ANN202",  # missing-return-type-private-function
  "ANN204",  # missing-return-type-special-method
  "ANN401",  # any-type
  "C408",    # unnecessary-collection-call
  "COM812",  # missing-trailing-comma
  "D100",    # undocumented-public-module
  "D101",    # undocumented-public-class
  "D102",    # undocumented-public-method
  "D103",    # undocumented-public-function
  "D104",    # undocumented-public-package
  "D105",    # undocumented-magic-method
  "D107",    # undocumented-public-init
  "D200",    # unnecessary-multiline-docstring
  "D203",    # incorrect-blank-line-before-class
  "D212",    # multi-line-summary-first-line
  "D401",    # non-imperative-mood
  "E731",    # lambda-assignment
  "ERA001",  # commented-out-code
  "FLY002",  # static-join-to-f-string
  "N813",    # camelcase-imported-as-lowercase
  "PLR0913", # too-many-arguments
  "PLR2004", # magic-value-comparison
  "S101",    # assert
  "T201",    # print
  "UP031",   # printf-string-formatting
]

[tool.ruff.lint.per-file-ignores]
"wxvx/tests/*" = [
  "N802",    # invalid-function-name
  "PT013",   # pytest-incorrect-pytest-import
  "SLF001",  # private-member-access
]
